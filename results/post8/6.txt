The Dynamic Tree Demo applet is used to illustrate applet deployment. You might want to set up build scripts to execute some of the following steps. A browser with JavaScript enabled is required for this page to operate properly. Note: Â If you don't see the example running, you might need to enable the JavaScript interpreter in your browser so that the Deployment Toolkit script can function properly. Compile your applet's Java code and make sure all class files and resources such as images are in a separate directory. In the case of the DynamicTree Demo applet, the compiled classes are placed in the build/classes/appletComponentArch directory. Create a text file that contains any JAR file manifest attributes that your applet needs. For the DynamicTree Demo applet, create a file named mymanifest.txt in the build/classes directory, and add the Permissions, Codebase, and Application-Name attributes. The applet does not require access to the user's system resources, so use sandbox for the permissions. Use the domain from which you will load the sample for the code base, for example, myserver.com. Add the following attributes to the mymanifest.txt file.
<br>Permissions: sandbox
<br>Codebase: myserver.com
<br>Application-Name: Dynamic Tree Demo
<br> Other manifest attributes are available to restrict an applet to using only trusted code, and to provide security for applets that need to make calls between privileged Java code and sandbox Java code, or have JavaScript code that calls the applet. See the Enhancing Security with Manifest Attributes lesson to learn more about the manifest attributes that are available. Create a JAR file containing your applet's class files and resources. Include the manifest attributes in the mymanifest.txt file that you created in the previous step. For example, the following command creates a JAR file with the class files in the build/classes/appletComponentArch directory and the manifest file in the build/classes directory.
<br>% cd build/classes
<br>% jar cvfm DynamicTreeDemo.jar mymanifest.txt appletComponentArch
<br> See the Packaging Programs in JAR Files lesson to learn more about creating and using JAR files. Sign the JAR file for your applet and time stamp the signature. Use a valid, current code signing certificate issued by a trusted certificate authority to provide your users with assurance that it is safe to run the applet. See the Signing JAR Files lesson for more information. If you want to use a signed JNLP file for security, create the JNLP file as described in the next step and include it in the JAR file before the JAR file is signed. See Signed JNLP Files in the Java Platform, Standard Edition Deployment Guide for information. Create a JNLP file that describes how your applet should be launched. Here is the JNLP file used to launch the Dynamic Tree Demo applet.
